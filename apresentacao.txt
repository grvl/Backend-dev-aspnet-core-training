WISHLIST API
-> API para criar / editar listas de desejo 

-> API com funcionalidade de cadastro e login
	-> Autenticação via token JWT

-> Usário cria uma lista de itens com preço, nome e toggle de comprado ou não

-> Usuário pode share a lista com outros usuários, para que os outros possam contribuir / editar a mesma lista

-> Usuário não tem acesso a lista de outros usuários se elas não forem shared
	-> Um usuário pode criar, editar e deletar suas próprias listas
	-> Um usuário pode editar e deletar qualquer lista que tiver sido shared com ele
	-> Um usuário não pode ser removido de uma lista
	-> admin tem acesso a todas as listas, independente de ter acesso ou não

-> Um usuário pode adicionar, editar e deletar itens desde que tenham uma lista associada a qual o usuário tem acesso
	-> admin pode mexer em qualquer item, independente de ter acesso consedido ou não

https://localhost:44323/swagger/index.html

-> modelo de dados (usuario *-* lista, lista *-1 item)

-> informações de cada tipo 
	-> Item
		-> Nome  (str) - obrigatório mas não distinto
		-> ListaId (int) - obrigatório - variável auxiliar para controlar a relação de muitos para um entre itens e lista
		-> Quantidade (int) -  default 1
		-> Preço (Money) -  default 0
		-> Comprado (Bool) -  default false
	-> Lista
		->Nome - obrigatório mas não distinto (str)
		
				->UserList - tabela auxiliar para controlar a relação de muitos para muitos entre lista e usuário
					-> ID lista
					-> ID usuário
		
	-> Usuário
		-> Nome de usuário (str) - obrigatório e único
		-> Senha(str) - obrigatório 
		-> Role (str) -  default 'user', pode ser 'admin'
		
-> Futuras possíveis melhorias
	-> implementar hashing e salting de senhas

	-> Pesquisa com filtro para listas e itens

	-> Pesquisa de outros usuários
	
	-> Permissões limitadas em sharing de listas
		-> Viewonly, apenas adicionar, apenas editar, etc
		-> Opção de revogar direitos dos usuários não criadores
	
	-> Listas públicas ou view only em vez de só private
		-> URL para share a lista para visualização sem autentiacação
	
	-> diretório de pesquisar outras listas
		-> Dependente da implementação de diferentes tipos de permissão de visualização de lista
	
	-> pesquisa de outros usuários
		-> Opções de visualização também seriam implementadas para usuário
	
	-> aumentar a quantidade de dados que se pode armazenar sobre um item
		-> Fotos, descrição, etc
	
	-> Tracking parcial de itens 
		-> Ex: 1/2 obtidos